---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const pageTitle = "Statistics";

// Get all content collections
const articles = await getCollection('articles');
const books = await getCollection('books');
const tutorials = await getCollection('tutorials');
const prompts = await getCollection('prompts');
const recipes = await getCollection('recipes');

// Combine all content
const allContent = [...articles, ...books, ...tutorials, ...prompts, ...recipes];

// Create monthly counts
const monthlyData = allContent.reduce((acc, content) => {
  const date = new Date(content.data.dateCreated);
  const monthYear = date.toLocaleString('en-US', { month: 'long', year: 'numeric' });

  acc[monthYear] = (acc[monthYear] || 0) + 1;
  return acc;
}, {});

// Convert to array and sort chronologically
const sortedData = Object.entries(monthlyData)
  .map(([date, count]) => ({ date, count }))
  .sort((a, b) => new Date(a.date) - new Date(b.date));
---

<BaseLayout pageTitle={pageTitle}>
  <div class="flex flex-col mx-auto mb-10 space-y-6 prose text-xl">
    <h1 class="mt-0 mb-4 text-4xl font-bold md:mb-6 md:text-5xl">Statistics</h1>

    <h2 class="mt-8 mb-4 text-3xl font-bold">Number of Content Pieces Created</h2>

    <div id="chart" class="w-full h-[400px]" data-stats={JSON.stringify(sortedData)}></div>
  </div>

  <script>
    import * as d3 from 'd3';

    // Get the data that we prepared in the frontmatter
    const data = JSON.parse(document.getElementById('chart').dataset.stats);

    // Set dimensions
    const margin = {top: 20, right: 20, bottom: 60, left: 40};
    const width = document.getElementById('chart').offsetWidth - margin.left - margin.right;
    const height = 400 - margin.top - margin.bottom;

    // Create tooltip div
    const tooltip = d3.select('#chart')
      .append('div')
      .attr('class', 'tooltip')
      .style('opacity', 0)
      .style('position', 'absolute')
      .style('background-color', 'white')
      .style('border', '1px solid #ddd')
      .style('border-radius', '4px')
      .style('padding', '8px')
      .style('pointer-events', 'none');

    // Create SVG
    const svg = d3.select('#chart')
      .append('svg')
        .attr('width', width + margin.left + margin.right)
        .attr('height', height + margin.top + margin.bottom)
      .append('g')
        .attr('transform', `translate(${margin.left},${margin.top})`);

    // X axis
    const x = d3.scaleBand()
      .range([0, width])
      .domain(data.map(d => d.date))
      .padding(0.2);

    svg.append('g')
      .attr('transform', `translate(0,${height})`)
      .call(d3.axisBottom(x))
      .selectAll('text')
        .attr('transform', 'rotate(-45)')
        .style('text-anchor', 'end');

    // Y axis
    const y = d3.scaleLinear()
      .domain([0, d3.max(data, d => d.count)])
      .range([height, 0]);

    svg.append('g')
      .call(d3.axisLeft(y));

    // Bars with tooltips
    svg.selectAll('rect')
      .data(data)
      .enter()
      .append('rect')
        .attr('x', d => x(d.date))
        .attr('y', d => y(d.count))
        .attr('width', x.bandwidth())
        .attr('height', d => height - y(d.count))
        .attr('fill', '#3B82F6')
        .on('mouseover', function(event, d) {
          tooltip.transition()
            .duration(200)
            .style('opacity', .9);
          tooltip.html(`${d.date}<br/>Content pieces: ${d.count}`)
            .style('left', (event.pageX + 10) + 'px')
            .style('top', (event.pageY - 28) + 'px');
          d3.select(this)
            .style('opacity', 0.8);
        })
        .on('mouseout', function() {
          tooltip.transition()
            .duration(500)
            .style('opacity', 0);
          d3.select(this)
            .style('opacity', 1);
        });
  </script>
</BaseLayout>
